<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HLF.ContextConfig</name>
    </assembly>
    <members>
        <member name="T:HLF.ContextConfig.ContextConfigOverride">
            <summary>
            Handles overriding standard 'ConfigurationManager.AppSettings["key"]' operations
            </summary>
        </member>
        <member name="M:HLF.ContextConfig.ContextConfigOverride.ActivateOverride">
            <summary>
            Re-initializes the ConfigurationManager to utilize ContextConfig values when calling 'ConfigurationManager.AppSettings["key"]'
            A call to this should be placed somewhere before config values are called, for instance, in App Start.
            Or use the 'ContextConfigOverrideModule' HttpModule for default handling
            **Will activate the override based on the value in ContextConfig.config**
            </summary>
        </member>
        <member name="M:HLF.ContextConfig.ContextConfigOverride.ActivateOverride(System.Boolean)">
            <summary>
            Re-initializes the ConfigurationManager to utilize ContextConfig values when calling 'ConfigurationManager.AppSettings["key"]'
            A call to this should be placed somewhere before config values are called, for instance, in App Start.
            Or use the 'ContextConfigOverrideModule' HttpModule for default handling
            </summary>
            <param name="DoOverride">Should the override be activated? (False=no code will run)</param>
        </member>
        <member name="T:HLF.ContextConfig.ContextConfigOverrideModule">
            <summary>
            HttpModule to run 'ContextConfigOverride.ActivateOverride()'
            Register in Web.config file:
            &gt;add name="ContextConfigOverrideModule" type="HLF.ContextConfig.ContextConfigOverrideModule, HLF.ContextConfig" /&lt;
            IIS6 or Classic Mode - place in  &gt;system.web&lt;&gt;httpModules&lt; section
            IIS7+ or Integrated Mode - place in &gt;system.webServer&lt;&gt;modules&lt; section
            </summary>
        </member>
        <member name="T:HLF.ContextConfig.ConfigSettings">
            <summary>
            The 'ConfigSettings' class give you direct access to all the configured data using collections and dot(.) notation.
            *Note: you will need to explicitly declare objects of the element types in order to use their properties.
            example:
            foreach (DomainElement Domain in ConfigSettings.Settings.Domains)
            { string EnvironmentName =  Domain.Environment;}
            </summary>
        </member>
        <member name="F:HLF.ContextConfig.ConfigSettings.Settings">
            <summary>
            Represents all the ConfigSettings
            </summary>
        </member>
        <member name="P:HLF.ContextConfig.ConfigSettings.Version">
            <summary>
            &lt;ContextConfig&gt; 'version' attribute
            </summary>
        </member>
        <member name="P:HLF.ContextConfig.ConfigSettings.OverrideConfigurationManager">
            <summary>
            &lt;ContextConfig&gt; 'OverrideConfigurationManager' attribute
            </summary>
        </member>
        <member name="P:HLF.ContextConfig.ConfigSettings.Domains">
            <summary>
            &lt;ContextConfig&gt; &lt;Domains&gt; collection
            </summary>
        </member>
        <member name="P:HLF.ContextConfig.ConfigSettings.Environments">
            <summary>
            &lt;ContextConfig&gt; &lt;Environments&gt; collection
            </summary>
        </member>
        <member name="T:HLF.ContextConfig.DomainElement">
            <summary>
            Represents a Domain from the config file
            </summary>
        </member>
        <member name="P:HLF.ContextConfig.DomainElement.Url">
            <summary>
            &lt;Domain&gt; 'url' attribute
            </summary>
        </member>
        <member name="P:HLF.ContextConfig.DomainElement.Environment">
            <summary>
            &lt;Domain&gt; 'environment' attribute
            </summary>
        </member>
        <member name="P:HLF.ContextConfig.DomainElement.SiteName">
            <summary>
            &lt;Domain&gt; 'sitename' attribute
            </summary>
        </member>
        <member name="T:HLF.ContextConfig.EnvironmentElement">
            <summary>
            Represents a defined Environment from the config file
            </summary>
        </member>
        <member name="P:HLF.ContextConfig.EnvironmentElement.Name">
            <summary>
            &lt;Environment&gt; 'name' attribute
            </summary>
        </member>
        <member name="P:HLF.ContextConfig.EnvironmentElement.Configs">
            <summary>
            &lt;Environment&gt; &lt;Configs&gt; (key/values) collection
            </summary>
        </member>
        <member name="T:HLF.ContextConfig.KeyValueElement">
            <summary>
            Represents a Key/Value pair defined for an environment in the config file
            </summary>
        </member>
        <member name="P:HLF.ContextConfig.KeyValueElement.Key">
            <summary>
            &lt;Environment&gt; &lt;add&gt; 'key' attribute
            </summary>
        </member>
        <member name="P:HLF.ContextConfig.KeyValueElement.Value">
            <summary>
            &lt;Environment&gt; &lt;add&gt;'value' attribute
            </summary>
        </member>
        <member name="T:HLF.ContextConfig.DomainElementCollection">
            <summary>
            Represents all the Domains defined in the config file
            </summary>
        </member>
        <member name="M:HLF.ContextConfig.DomainElementCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:HLF.ContextConfig.DomainElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for. </param>
        </member>
        <member name="P:HLF.ContextConfig.DomainElementCollection.ElementName">
            <summary>
            Gets the name used to identify this collection of elements in the configuration file when overridden in a derived class.
            </summary>
            <returns>
            The name of the collection; otherwise, an empty string. The default is an empty string.
            </returns>
        </member>
        <member name="P:HLF.ContextConfig.DomainElementCollection.CollectionType">
            <summary>
            Gets the type of the <see cref="T:System.Configuration.ConfigurationElementCollection"/>.
            </summary>
            <returns>
            The <see cref="T:System.Configuration.ConfigurationElementCollectionType"/> of this collection.
            </returns>
        </member>
        <member name="P:HLF.ContextConfig.DomainElementCollection.Item(System.Int32)">
            <summary>
            Integer index
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:HLF.ContextConfig.DomainElementCollection.Item(System.String)">
            <summary>
            
            </summary>
            <param name="url"></param>
        </member>
        <member name="T:HLF.ContextConfig.EnvironmentElementCollection">
            <summary>
            Represents all the Environments defined in the config file
            </summary>
        </member>
        <member name="M:HLF.ContextConfig.EnvironmentElementCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:HLF.ContextConfig.EnvironmentElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for. </param>
        </member>
        <member name="P:HLF.ContextConfig.EnvironmentElementCollection.ElementName">
            <summary>
            Gets the name used to identify this collection of elements in the configuration file when overridden in a derived class.
            </summary>
            <returns>
            The name of the collection; otherwise, an empty string. The default is an empty string.
            </returns>
        </member>
        <member name="P:HLF.ContextConfig.EnvironmentElementCollection.CollectionType">
            <summary>
            Gets the type of the <see cref="T:System.Configuration.ConfigurationElementCollection"/>.
            </summary>
            <returns>
            The <see cref="T:System.Configuration.ConfigurationElementCollectionType"/> of this collection.
            </returns>
        </member>
        <member name="P:HLF.ContextConfig.EnvironmentElementCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:HLF.ContextConfig.EnvironmentElementCollection.Item(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="T:HLF.ContextConfig.KeyValueElementCollection">
            <summary>
            Represents all the Key/Value pair elements defined in the config file
            </summary>
        </member>
        <member name="M:HLF.ContextConfig.KeyValueElementCollection.CreateNewElement">
            <summary>
            When overridden in a derived class, creates a new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </summary>
            <returns>
            A new <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
        </member>
        <member name="M:HLF.ContextConfig.KeyValueElementCollection.GetElementKey(System.Configuration.ConfigurationElement)">
            <summary>
            Gets the element key for a specified configuration element when overridden in a derived class.
            </summary>
            <returns>
            An <see cref="T:System.Object"/> that acts as the key for the specified <see cref="T:System.Configuration.ConfigurationElement"/>.
            </returns>
            <param name="element">The <see cref="T:System.Configuration.ConfigurationElement"/> to return the key for. </param>
        </member>
        <member name="P:HLF.ContextConfig.KeyValueElementCollection.ElementName">
            <summary>
            Gets the name used to identify this collection of elements in the configuration file when overridden in a derived class.
            </summary>
            <returns>
            The name of the collection; otherwise, an empty string. The default is an empty string.
            </returns>
        </member>
        <member name="P:HLF.ContextConfig.KeyValueElementCollection.CollectionType">
            <summary>
            Gets the type of the <see cref="T:System.Configuration.ConfigurationElementCollection"/>.
            </summary>
            <returns>
            The <see cref="T:System.Configuration.ConfigurationElementCollectionType"/> of this collection.
            </returns>
        </member>
        <member name="P:HLF.ContextConfig.KeyValueElementCollection.Item(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
        </member>
        <member name="P:HLF.ContextConfig.KeyValueElementCollection.Item(System.String)">
            <summary>
            
            </summary>
            <param name="key"></param>
        </member>
        <member name="T:HLF.ContextConfig.ContextConfig">
            <summary>
            The 'ContextConfig' static class includes useful functions to test and return data about domains, environments, and configured key/value pairs.
            </summary>
        </member>
        <member name="F:HLF.ContextConfig.ContextConfig.CurrentDomain">
            <summary>
            Current active domain url
            </summary>
        </member>
        <member name="M:HLF.ContextConfig.ContextConfig.DomainIsConfigured(System.Boolean)">
            <summary>
            Check whether the current domain exists in the Domains list
            </summary>
            <param name="AcceptWildcard">If there is a wildcard (*) domain specified, return true? (Choose false to explicitly search for this url)</param>
            <returns></returns>
        </member>
        <member name="M:HLF.ContextConfig.ContextConfig.DomainIsConfigured(System.String,System.Boolean)">
            <summary>
            Check whether the URL exists in the Domains list
            </summary>
            <param name="DomainUrl">Url to lookup</param>
            <param name="AcceptWildcard">If there is a wildcard (*) domain specified, return true? (Choose false to explicitly search for this url)</param>
            <returns></returns>
        </member>
        <member name="M:HLF.ContextConfig.ContextConfig.DomainEnvironmentName">
            <summary>
            Get the Environment name for the current domain
            </summary>
            <returns></returns>
        </member>
        <member name="M:HLF.ContextConfig.ContextConfig.DomainEnvironmentName(System.String)">
            <summary>
            Get the Environment name for the provided domain url
            </summary>
            <param name="DomainUrl">Url to lookup</param>
            <returns></returns>
        </member>
        <member name="M:HLF.ContextConfig.ContextConfig.DomainSiteName">
            <summary>
            Get the Site Name for the current domain
            </summary>
            <returns></returns>
        </member>
        <member name="M:HLF.ContextConfig.ContextConfig.DomainSiteName(System.String)">
            <summary>
            Get the Site Name for the provided domain url
            </summary>
            <param name="DomainUrl">Url to lookup</param>
            <returns></returns>
        </member>
        <member name="M:HLF.ContextConfig.ContextConfig.EnvironmentIsConfigured(System.Boolean)">
            <summary>
            Check whether the current environment exists in the Environments list
            </summary>
            <param name="AcceptDefault">If there is a "default" domain specified, return true? (Choose false to explicitly search for this environment)</param>
            <returns></returns>
        </member>
        <member name="M:HLF.ContextConfig.ContextConfig.EnvironmentIsConfigured(System.String,System.Boolean)">
            <summary>
            Check whether the current environment exists in the Environments list
            </summary>
            <param name="EnvironmentName">Name to lookup</param>
            <param name="AcceptDefault">If there is a "default" domain specified, return true? (Choose false to explicitly search for this environment)</param>
            <returns></returns>
        </member>
        <member name="M:HLF.ContextConfig.ContextConfig.GetValue(System.String)">
            <summary>
            Get the value for a given key on the current domain
            </summary>
            <param name="ConfigKey">Key name</param>
            <returns></returns>
        </member>
        <member name="M:HLF.ContextConfig.ContextConfig.GetValue(System.String,System.String)">
            <summary>
            Get the value when providing a key and environment name
            </summary>
            <param name="ConfigKey">Key name</param>
            <param name="EnvironmentName">Environment name</param>
            <returns></returns>
        </member>
    </members>
</doc>
